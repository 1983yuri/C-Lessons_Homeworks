/* string[,] table = new string[2, 5];
// String.Empty - инициализация для строк
// 1 строка table[0,0] table[0,1] table[0,2] table[0,3] table[0,4] в нашем случае индекс последнего столбца [0,4]
// 2 строка table[1,0] table[1,1] table[1,2] table[1,3] table[1,4]

table[1, 2] = "слово";

for(int rows = 0; rows < 2; rows++)
{
    for(int columns = 0; columns < 5; columns++)
    {
        Console.WriteLine($"-{table[rows, columns]}-");
    }
}



void PrintArray(int[,] matr) // Метод для вывода в консоль строк и столбцов - матрицы
{
    for (int i = 0; i < matr.GetLength(0); i++) // По i - щелкаем строки
    {
        for (int j = 0; j < matr.GetLength(1); j++) // По j - щелкаем столбцы
        {
            Console.Write($" {matr[i, j]} ");
        }
        Console.WriteLine();
    }
}
*/
void PrintImage(int[,] image) // Метод для вывода в консоль изображения
{
    for (int i = 0; i < image.GetLength(0); i++) // По i - щелкаем строки
    {
        for (int j = 0; j < image.GetLength(1); j++) // По j - щелкаем столбцы
        {
            if(image[i, j] == 0 ) Console.Write($" ");
            else Console.Write($"+");
        }
        Console.WriteLine();
    }
}

// Изображение:
int[,] pic = new int[,] // Необязательно указывать кол-во строчек и стобцов, если есть фикс данные
{
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};


void FillImage(int row, int col)  // Метод закрашивания изображения // аргументы: строка и пиксель с которого начнем закрашивать
{
    if (pic[row, col] == 0) // если наш пиксель не закрашен
        pic[row, col] = 1;
    FillImage(row - 1, col); // Метод вызывает сам себя внутри себя
    FillImage(row, col - 1);
    FillImage(row + 1, col);
    FillImage(row, col + 1);
}

// int[,] matrix = new int[3, 4];

// PrintArray(matrix);
/*
void FillArray(int[,] matr) // Метод заполнения матрицы случайными числами
{
    for (int i = 0; i < matr.GetLength(0); i++) // По i - щелкаем строки
    {
        for (int j = 0; j < matr.GetLength(1); j++) // По j - щелкаем столбцы
        {
            matr[i, j] = new Random().Next(1,10); // [1; 10)
        }
    }
}

int[,] matrix = new int[3, 4];
PrintArray(matrix);
FillArray(matrix);
Console.WriteLine();
PrintArray(matrix);



PrintImage(pic);
FillImage(10, 10);
PrintImage(pic);


// Метод вычисления факториала с помощью рекурсия
double Factorial(int num)
{
    // 1! = 1
    // 0! = 1
    if(num == 1) return 1;
    else return num * Factorial(num -1);
}


for(int i = 1; i < 40; i++)
{
    Console.WriteLine($"{i}! = {Factorial(i)}");
}

// Числа Фибоначи f(1) = 1
//                f(2) = 1
                  f(n) = f(n-1) + f(n-2) и т.д.

double Fibonacci(int n)
{
    if(n == 1 || n == 2) return 1;
    else return Fibonacci(n-1) + Fibonacci(n-2);
}
for(int i = 1; i < 50; i++)
{
    Console.WriteLine($"f({i}) = {Fibonacci(i)}");
}
*/
